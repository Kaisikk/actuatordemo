version: '3.8'

services:
  # Spring Boot приложение
  app:
    image: eclipse-temurin:21-jdk-jammy
    container_name: spring-boot-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./target/actuatordemo-0.0.1-SNAPSHOT.jar:/app.jar
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      # Включаем Actuator и метрики для Prometheus
      - management.endpoints.web.exposure.include=prometheus,health,metrics
      - management.endpoint.prometheus.enabled=true
      # Настройки для более детальных метрик
      - management.metrics.export.prometheus.enabled=true
      - management.metrics.tags.application=spring-boot-app
    command: java -jar /app.jar
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"  # Позволяет перезагружать конфиг через API
    depends_on:
      app:
        condition: service_healthy

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Пароль по умолчанию
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  grafana-storage:  # Постоянное хранилище для Grafana